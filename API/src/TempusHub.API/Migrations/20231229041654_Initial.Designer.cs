// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TempusHub.API.Common;

#nullable disable

namespace TempusHub.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231229041654_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TempusHub.API.Features.Ingests.Ingest", b =>
                {
                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<int>("RowsWritten")
                        .HasColumnType("int");

                    b.HasKey("Date");

                    b.ToTable("Ingests");
                });

            modelBuilder.Entity("TempusHub.API.Features.Maps.Map", b =>
                {
                    b.Property<DateOnly>("ArchivedDate")
                        .HasColumnType("date");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("DemomanTier")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoldierTier")
                        .HasColumnType("int");

                    b.HasKey("ArchivedDate", "Id");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("TempusHub.API.Features.ZoneRecords.ZoneRecord", b =>
                {
                    b.Property<DateOnly>("ArchivedDate")
                        .HasColumnType("date");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("Duration")
                        .HasColumnType("bigint");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<long>("ZoneId")
                        .HasColumnType("bigint");

                    b.HasKey("ArchivedDate", "Id");

                    b.HasIndex("ArchivedDate", "ZoneId");

                    b.ToTable("ZoneRecords");
                });

            modelBuilder.Entity("TempusHub.API.Features.Zones.Zone", b =>
                {
                    b.Property<DateOnly>("ArchivedDate")
                        .HasColumnType("date");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<long>("MapId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ArchivedDate", "Id");

                    b.HasIndex("ArchivedDate", "MapId");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("TempusHub.API.Features.ZoneRecords.ZoneRecord", b =>
                {
                    b.HasOne("TempusHub.API.Features.Zones.Zone", "Zone")
                        .WithMany("Records")
                        .HasForeignKey("ArchivedDate", "ZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("TempusHub.API.Features.Zones.Zone", b =>
                {
                    b.HasOne("TempusHub.API.Features.Maps.Map", "Map")
                        .WithMany("Zones")
                        .HasForeignKey("ArchivedDate", "MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Map");
                });

            modelBuilder.Entity("TempusHub.API.Features.Maps.Map", b =>
                {
                    b.Navigation("Zones");
                });

            modelBuilder.Entity("TempusHub.API.Features.Zones.Zone", b =>
                {
                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
