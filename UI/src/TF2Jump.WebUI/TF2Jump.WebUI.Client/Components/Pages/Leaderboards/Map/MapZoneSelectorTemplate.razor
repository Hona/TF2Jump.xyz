@using TempusApi.Models.Responses
@using TempusApi.Enums
@using Humanizer

@if (Zones is null || !Zones.Any())
{
    return;
}
 
@{
    var zoneType = Zones.First().Type;
}
@if (zoneType is not ZoneType.Map)
{
    <FluentOption TOption="string" Style="margin-top: 0.5rem; background: none; opacity: 0.5;" Value="_" Disabled>
        @(zoneType.ToString().Pluralize())
    </FluentOption>
}

@foreach (var zone in Zones)
{
    <FluentOption TOption="string" Value="@(zone.Type + "," + zone.Zoneindex)">
        @if (zoneType is ZoneType.Map)
        {
            <FluentIcon Value="@(new Icons.Regular.Size16.Map())" Slot="start"/>
        }
        <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center"
                     Style="justify-content: space-between">
            @if (!string.IsNullOrWhiteSpace(zone.CustomName))
            {
                @zone.CustomName
            }
            else
            {
                <span>
                    @zone.Type.ToString()
                    &nbsp;
                    @if (zoneType is not ZoneType.Map)
                    {
                        @zone.Zoneindex
                    }
                </span>
            }

            @if (zoneType is ZoneType.Map)
            {
                <TierPill Tier="@(SelectedClass is Class.Soldier ? Map.TierInfo.Soldier.ToString() : Map.TierInfo.Demoman.ToString())"
                          Style="padding-left: 1rem"/>
            }
            else
            {
                <TierPill Tier="?"
                          Style="padding-left: 1rem"/>
            }
        </FluentStack>
    </FluentOption>
}
@code {
    [Parameter, EditorRequired]
    public required List<ZoneInfo> Zones { get; set; }
    
    [Parameter, EditorRequired]
    public required FullMapOverview2 Map { get; set; }
    
    [Parameter] public Class SelectedClass { get; set; }
}