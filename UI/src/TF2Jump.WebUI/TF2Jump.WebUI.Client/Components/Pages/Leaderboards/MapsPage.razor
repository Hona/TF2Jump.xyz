@page "/leaderboard/maps"
@using TempusApi.Enums
@using TempusApi.Models.DetailedMapList

@inject ITempusClient TempusClient

<div>
    @if (_loading)
    {
        <FluentProgressRing/>
    }
    else
    {
        <FluentStack Orientation="Orientation.Vertical" VerticalGap="4">
            <FluentCard Style="width: 100%; height: fit-content">
                <h3>Maps</h3>

                <ClassSelector @bind-SelectedClass="_selectedClass"/>
            </FluentCard>

            <FluentDivider Orientation="Orientation.Horizontal" Role="@DividerRole.Presentation"/>

            <FluentGrid Class="map-card-grid">
                @foreach (var map in _maps ?? [])
                {
                    <FluentGridItem xs="12" sm="6" md="4" lg="3">
                        @{
                            var imageUrl = $"https://static.tempus2.xyz/web/screenshots/raw/{map.Name}_320p.jpeg";
                        }
                        <FluentCard MinimalStyle>
                            <div class="map-header">
                                <a href="/leaderboard/maps/@map.Name">
                                    <h5>
                                        @map.Name
                                    </h5>
                                </a>

                                @{
                                    var tier = _selectedClass switch
                                    {
                                        Class.Soldier => map.TierInfo.Soldier,
                                        Class.Demoman => map.TierInfo.Demoman,
                                        _ => throw new ArgumentOutOfRangeException()
                                    };
                                }
                                <TierPill Tier="@(tier.ToString())"></TierPill>
                            </div>

                            <img src="@imageUrl" height="128" 
                                 role="presentation"
                                 alt="@map.Name screenshot"
                                 style="width: 100%;"
                                 loading="lazy"
                                 onerror="this.style.display='none'"/>
                        </FluentCard>
                    </FluentGridItem>
                }
            </FluentGrid>
        </FluentStack>
    }
</div>

@code
{
    private bool _loading;
    private List<DetailedMapOverviewModel>? _maps;
    private Class _selectedClass = Class.Soldier;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _loading = true;
            _maps = await TempusClient.GetDetailedMapListAsync();
        }
        finally
        {
            _loading = false;
        }
    }
}