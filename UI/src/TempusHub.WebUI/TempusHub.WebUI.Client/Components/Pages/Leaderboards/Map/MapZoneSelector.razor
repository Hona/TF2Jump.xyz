@using TempusApi.Models.Responses
@using TempusApi.Enums
@using TempusHub.WebUI.Components.Pages.Leaderboards.Map

@rendermode InteractiveAuto

<FluentListbox TOption="string"
               ValueChanged="HandleSelectedOptionChanged"
               Class="map-zone-selector">
    <MapZoneSelectorTemplate Zones="Map.Zones.Map" Map="@Map"/>
    <MapZoneSelectorTemplate Zones="Map.Zones.Course" Map="@Map"/>
    <MapZoneSelectorTemplate Zones="Map.Zones.Bonus" Map="@Map"/>
    <MapZoneSelectorTemplate Zones="Map.Zones.Trick" Map="@Map"/>
</FluentListbox>

@code
{
    [Parameter]
    public FullMapOverview2 Map { get; set; }

    [Parameter] public SelectedZone? SelectedZone { get; set; } = new(ZoneType.Map, 1);
    [Parameter] public EventCallback<SelectedZone?> SelectedZoneChanged { get; set; }

    private Task HandleSelectedOptionChanged(string? raw)
    {
        if (raw is null)
        {
            SelectedZone = null;
            return SelectedZoneChanged.InvokeAsync(SelectedZone);
        }
        
        var parts = raw.Split(',');
        var selectedZone = new SelectedZone(Enum.Parse<ZoneType>(parts[0]), int.Parse(parts[1]));
        
        SelectedZone = selectedZone;
        return SelectedZoneChanged.InvokeAsync(SelectedZone);
    }
}
